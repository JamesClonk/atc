// Code generated by go-bindata.
// sources:
// 1510262030_initial_schema.down.sql
// 1510262030_initial_schema.up.sql
// DO NOT EDIT!

package migration

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1510262030_initial_schemaDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcd\x4e\xc3\x40\x0c\x84\xef\x7d\x8a\xbc\x47\x4f\x20\x7a\x40\x42\xa2\x42\x08\xc4\xc9\xda\x24\x26\x75\xbb\xb1\x57\x6b\x6f\x80\xb7\x47\xfd\x53\xbb\xcd\x26\xbd\xce\xe7\x99\x75\x46\xce\xd3\xdb\xeb\xba\x7a\xff\x5a\xaf\xaa\x3a\x91\x6f\x41\xcd\x59\xd2\xe5\xe2\xa2\x37\xc2\xe6\x88\x31\xee\x59\x87\x93\xc8\xe6\x10\x88\x6f\xaf\xf1\x20\x3e\xf5\x38\xb6\x5d\xeb\xb7\x9e\x1f\x89\xbb\xdb\xa7\x1e\x1e\x5f\x56\x55\xed\x14\x21\xa2\x4a\x8a\x0d\x82\xfd\x05\xd4\x9c\x1f\xbe\x0c\x07\x64\x2b\x01\xea\x5d\x77\xe5\x6f\x5c\xb3\x29\x06\x10\x87\x54\x0c\x90\x64\x65\x92\x4b\x87\x60\x20\x1e\x9c\xa7\xd6\x99\xc4\x9c\x9e\x0b\xcb\x4d\xc4\x2d\x06\xe4\x16\xd9\x60\x72\x8d\xad\xd4\x63\x01\x14\x23\x39\x0f\x5d\x94\x14\xce\xf8\xe3\x79\xf5\x59\x79\x67\xa8\x06\x8d\xf4\xc1\xa3\x61\x7b\x0c\x56\x08\x18\x61\x2b\x75\x96\xc4\xf8\x5b\x7c\xf8\x10\x74\x81\x65\x73\xa0\x80\x9e\xf8\xa6\xcd\xbd\x9a\x2b\x79\xf7\x90\x74\x96\x4f\x31\xe1\x6f\xea\xa0\xd9\x60\xb3\x03\x45\x55\x12\x9e\x1d\x9d\x80\xe3\xfb\x39\xa3\x5c\x35\x74\x7d\xd6\x86\x45\xc7\x4a\x46\xc2\x73\x9d\x0c\x18\xf7\x9b\x61\x0b\xe5\xd8\xe3\x1f\x90\x6b\xa7\xcb\xbf\x77\xe7\xa7\xb1\xb9\xb6\x46\x23\x77\x4b\x3b\x39\xcc\xe9\x6e\x3a\x50\x97\x8b\xff\x00\x00\x00\xff\xff\xeb\x43\x2d\x52\x49\x04\x00\x00")

func _1510262030_initial_schemaDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1510262030_initial_schemaDownSql,
		"1510262030_initial_schema.down.sql",
	)
}

func _1510262030_initial_schemaDownSql() (*asset, error) {
	bytes, err := _1510262030_initial_schemaDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1510262030_initial_schema.down.sql", size: 1097, mode: os.FileMode(420), modTime: time.Unix(1510335551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1510262030_initial_schemaUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x6f\xe3\x38\x92\xef\xf9\x15\x7c\x8b\x0d\x78\x83\xce\x1d\xee\x0e\x97\xd9\x19\xc0\x9b\xa8\xa7\x7d\x9b\x76\x66\x1d\x67\x7b\xfb\x0e\x0b\x81\xb6\x18\x9b\x69\x59\xf2\x48\x74\x3a\xd9\xc3\xfd\xf7\x83\x24\x52\x24\xc5\xe2\x87\x1c\xdb\xd9\xc5\x6c\xa3\x1f\x62\x89\xac\x2a\x56\x15\x8b\xf5\x45\x9d\x9d\x5d\xcf\xa2\xf1\x3c\x42\xf3\xaf\xbf\x44\x68\xb1\xa3\x69\x12\x97\x0c\xb3\x5d\x89\xc6\xf7\x28\x9a\x3e\x7c\x46\x83\x33\x84\x10\x3a\xdf\x92\x2c\xa1\xd9\xea\x7c\xd4\xfc\x2c\x19\x2e\x18\x49\xc4\x4f\xbc\xc8\xd5\x9f\xe5\x6e\xb9\x24\x24\x91\x0f\x1e\x31\x4d\xe5\x2f\x52\x14\x79\x41\x92\xf3\xb3\xe1\x0f\x67\x67\x3a\x09\xcb\x3c\x63\x98\x66\xa4\xa8\xc8\x58\x91\x2e\x15\xcb\x35\x59\x7e\x13\x60\x56\x84\x89\x3f\x8b\x5d\xe6\x85\xc6\x4c\x68\x05\xc1\x4c\x59\x54\xfd\x5b\x92\x99\x90\x92\x15\xf9\xab\x32\x80\x2f\xc3\x8f\x29\xce\xd3\x64\x7f\x6c\x00\xfc\xe7\x3c\xdd\x6d\xc8\xd1\x97\xa1\xa2\x39\xf8\x1a\xbe\xe7\xc5\x37\x9b\x28\x8a\x5d\x96\xe9\xea\x95\x2a\x0a\x93\x62\x4d\xf9\xaa\x9f\xf2\x65\x41\x18\x2d\x24\x4a\x81\x71\xfc\x87\xdb\x08\x2d\x70\x49\xe2\x82\x94\xf9\xae\x58\x92\x98\xbd\x6e\x49\xc9\x31\xd2\x04\xd1\x8c\x91\x15\x29\xd0\xf4\x6e\x8e\xa6\x0f\xb7\xb7\x0d\xbc\x0c\x6f\x08\x62\xe4\x85\xb5\xcf\xf5\xa5\xdc\x47\x7f\x7a\x88\xa6\xd7\x20\xec\x98\x26\x71\x49\x7e\xad\xe1\xdc\xcf\xc7\xb3\x39\xfa\x32\x99\x7f\x42\x97\xf5\x83\xc9\xf4\x7a\x16\x7d\x8e\xa6\x73\xf4\x87\xaf\xfc\xd1\xf4\x0e\x7d\x9e\x4c\xff\x3c\xbe\x7d\x88\xda\xdf\xe3\xbf\xc8\xdf\xd7\xe3\xeb\x4f\x11\xba\xac\xd1\x8f\x6f\xe7\xd1\x2c\x04\x3b\xba\xfb\x32\x8d\x6e\x2a\x24\xc0\x98\x0b\x9a\x68\x72\x69\xb8\x54\xef\x7b\xf2\x4c\x32\x26\xd8\xd3\x3c\x92\x4c\x6a\x78\x53\x81\x40\xcb\x35\x2e\xf0\x92\x91\x02\x3d\xe3\xa2\x92\xf5\xe0\x5f\xff\x65\xd8\x61\xe2\x16\xbf\xa6\x39\x4e\x74\x3e\x36\xaf\x6a\x34\xb1\x95\xfd\xcf\xa4\x28\x69\x9e\xb9\x24\xa0\x12\x4d\x37\x78\xa5\xac\x71\x89\x97\xeb\x56\xc4\xfa\x53\x63\x31\xdd\x25\x86\x60\xcb\xb6\x3b\x0f\x8b\x38\xfd\x24\x91\x44\x75\x87\x98\x1a\xd6\x3c\xdf\xe4\x09\x7d\xa4\x24\x89\x19\xad\x06\xd0\x0d\x29\x19\xde\x6c\xd1\x77\xca\xd6\xf9\x8e\xd5\x4f\xd0\xdf\xf2\x8c\xa0\x9b\xe8\xe3\xf8\xe1\x76\x8e\xb2\xfc\xfb\x60\x18\x40\x77\xbe\x63\x87\x20\x9c\xbc\x6c\x53\xba\xa4\x0c\x2d\xf2\x3c\x25\x38\x6b\xe9\x78\xc4\x69\x49\x4e\xb5\x9a\x3d\x76\x70\xf3\x9c\x1f\x6c\xda\x29\xd7\x19\xb1\x5c\x93\x64\x97\x92\x24\x68\x85\xf5\x19\x08\x2d\x4f\xae\x8d\xf3\x2d\x03\xb9\x60\x0e\x5b\xd1\x0c\xda\x5f\x97\xff\x3e\x54\x47\xc4\x1b\xc2\x70\x82\x19\xae\x17\xd9\xbc\x59\xe6\x9b\x6d\x4a\x58\x20\xe5\x4f\xf9\xc2\x10\x6e\x41\xf0\x36\x84\x4a\x46\xf0\xc6\xbe\x7d\x37\x38\xdb\xe1\x34\x7d\x8d\x59\x41\x57\x2b\x52\xd8\x08\x6a\x46\x57\x30\x8a\x25\xd9\x32\xba\x48\x89\x31\x90\x15\x3b\x3e\x2e\xcb\xb3\x25\x51\x56\xbb\xdd\x2d\x52\xba\x8c\xb7\x29\xce\xd0\x53\x99\xcb\x29\xe7\xff\xfb\x7f\xe7\x57\x57\xd5\x23\x3e\x90\x6e\x49\x5a\xb1\x4c\x12\x6c\xb3\xe6\xb5\x6a\x9d\xd2\x80\xab\x08\x15\x9b\x5d\x3f\x06\xcd\x34\x37\x63\xd9\x33\x4e\x69\x82\x59\x5e\xf0\x8d\x90\xe2\x92\xc9\xc7\x24\x09\xda\x6c\xe7\x97\xff\xf9\x1f\x1f\x7e\xf7\xe1\xf2\x77\x1f\x2e\xd1\x87\x0f\x57\xf5\xff\xf3\xab\x2b\xd7\x54\xcf\x79\xb8\xcc\xb3\x47\xba\x8a\xb9\x1d\x39\x1a\x1b\x75\x96\x08\xb7\x4b\x18\x85\x35\xce\x92\x14\xdc\xfd\xb0\xd5\xab\x54\xa8\x7a\xa8\xe8\x96\xa9\x32\x23\xfd\x38\xe9\xbe\xe0\x7e\x4d\x6b\x76\x38\x3e\x52\x49\xe5\x31\xde\x95\x24\x89\x17\xaf\x2e\xa1\x8c\xdc\xf6\xac\xb3\xe3\xa4\x31\x23\x86\x83\xdb\x4a\xb7\x75\xd4\xae\xae\xba\x63\x74\xe0\x6b\xfa\x84\x97\xdf\x02\xed\x46\x42\xcb\x0a\x1a\xcd\x76\x81\x13\x2a\x4b\x55\x3b\x1e\x8d\x44\x5a\xf2\x2a\x4d\x03\x0e\xc0\x6a\x74\xc9\xc8\x56\xf2\x32\x68\x0a\x66\x8c\x6c\xb6\x2c\x7c\x42\x25\x31\x9a\xad\xe2\x84\x16\x64\xc9\xf2\xe2\x35\x7c\xea\xb6\xc8\x97\xa4\x2c\x2b\xb1\x16\x3d\x66\x99\x4a\xd5\xce\xfb\x00\x4d\xd0\x2d\xb4\x7b\xac\xe1\xc8\x38\x47\xb7\xa4\xf4\xe3\x71\x45\x50\xbf\x19\x0d\x59\xc1\x73\x1a\x4f\xae\x0e\xf0\x62\xa9\xb2\x5d\xb5\x6f\x46\xad\x08\x73\x8c\xe1\xfb\x51\xba\x7f\x8d\x61\x6a\x40\x97\xa4\xac\xcd\x93\xf7\x40\x90\xa6\xe5\x84\x87\x82\x81\x54\x1e\x0c\xf2\x15\x78\x38\xd0\x2c\x21\x55\x8c\x5e\x39\xd7\x80\xb3\x6a\x35\x2e\x1d\x45\xeb\xc8\xa4\x02\x11\xdb\xfc\x29\x61\xe9\xad\xd3\x1f\x69\x51\xb2\x38\x5f\x2e\x77\x45\x41\xaa\x13\x5c\x98\x0c\xcf\x49\x62\x5b\xcb\x09\x05\xe1\x21\x41\x8a\xc5\x36\x10\x14\xd2\x53\xbe\x10\x02\xb1\x31\x95\xef\x9a\xdd\x66\x51\x19\x6c\xf2\xab\x77\x53\x6f\x71\x75\xc2\x38\xbd\x2c\x9b\x7c\x20\xab\x04\x49\x30\xcd\x57\xab\xea\x10\x0b\xb5\x33\x9c\x55\x09\x61\xa4\xd8\xd0\x2c\xf4\xac\xc0\x2f\x31\xcd\xe2\xc7\x94\xae\xd6\x2c\x2e\x48\xe5\xed\x84\xcd\x6c\x36\x38\xc4\x4d\xbc\x64\xf4\xd9\xf4\x2c\x21\x20\xb5\x2f\x5a\xec\x2c\xbe\x28\x34\x43\x7a\xa5\x16\x3d\xae\xc4\x7d\x42\x9d\x55\xd0\x49\xfd\xac\x1e\x5a\x75\x31\x2e\x49\x41\x71\x1a\xaf\x8a\x7c\xb7\xf5\x9a\x0a\x75\x30\xc4\x6c\xdd\x94\xb8\x78\xa2\xa1\x3d\x35\x87\x20\xe4\x3a\xbf\xf4\x21\x1d\xee\x7d\x1e\xcf\xa3\xd9\x64\x7c\x3b\xf9\xef\xe8\x06\xfd\x79\x12\x7d\x41\x29\x66\x95\xaf\xd7\x86\x60\x31\x77\xed\xb7\xa4\xa8\x8e\x4d\x34\xbe\x3f\x6b\x96\xc4\x07\x8a\x7d\xa4\x8e\xe0\xbc\xaf\xff\xdd\x47\xb7\xd1\xf5\xbc\xda\x0f\x83\x45\x7c\x79\x41\x93\x61\x35\x40\xcc\x92\xe3\x10\xfa\x38\xbb\xfb\x8c\x06\x3c\x2a\x5e\xc4\x97\xea\x3b\x84\xfe\xeb\x6e\x32\x6d\x4c\xce\x13\xba\x9b\xa2\xc1\xe0\xe9\x82\x26\xe8\xc7\x6a\xe0\x45\x23\xab\xe1\x70\xa8\x4c\xf9\xf2\x29\x9a\x45\xa8\xc6\xc9\xa3\xe3\xdf\xff\x84\xc6\xb7\xb7\x68\x30\x9e\xcd\xc6\x5f\xff\xa7\xcd\x01\x5f\x5d\xa9\x31\xf4\x48\x66\x83\xf5\x17\x7f\xd5\xa0\xff\x3c\xbb\x7b\xf8\xa5\x8e\x70\x5a\xf4\xed\xdb\xe1\x99\x58\xf4\xe2\x82\x26\xdc\x10\x5e\x54\x26\x52\xfc\xcd\x51\x89\x5f\x22\x4e\x57\x5e\xf3\x50\x5c\x3c\x11\x31\xb7\xfc\x5d\x85\xce\xfa\xaf\x36\x90\x16\x8f\x5b\x11\x8a\x07\x0d\x9d\xe2\x57\x1b\x22\x8b\x07\xdc\x33\x17\x3f\xcd\xe0\x57\xbc\xd1\x02\xdd\x76\x7d\x95\xfd\x10\x3f\x94\x90\xb6\x7d\x24\xcd\xf3\x99\x21\xec\x33\x29\x62\xab\x5a\xa5\x8d\xd8\xd3\x8b\xd6\x72\xff\x58\x33\xb8\x11\x7b\xad\x92\xd3\x3b\x74\x33\x9e\x8f\x7f\x38\x3b\x9b\x45\x1f\x67\xd1\xfd\xa7\xfe\xfa\x6d\x24\x5d\x33\xf2\xf2\x8f\xef\x83\x18\x8b\x38\xa1\x99\xb2\xe1\x96\x56\xca\x18\xe1\x35\x52\x72\xc6\xdb\x0d\x13\xcd\xde\xdb\x30\xfd\x88\xc6\xd3\xaf\xff\xb4\x4b\xbf\x6d\xbb\x04\xa8\xf4\x0f\xc0\x4e\xce\x33\x12\xe7\x8f\x8f\xb5\x09\x39\xca\xee\xd5\x8c\x9f\x60\x8e\x30\x7a\xa2\x9e\xe1\xf5\x99\xfb\x66\xb3\xfd\x7e\x7f\x5e\x24\xa4\xa0\xd9\xca\x8b\xbb\x4e\x20\xca\xdc\xf7\x91\xd3\x87\x21\x69\xe4\x46\xeb\x82\xbc\x70\xee\xbb\x3e\x95\x79\x66\x31\xe5\xad\x48\x4e\x68\xc2\xbb\x38\xa5\xe9\x6e\xdf\x80\x5e\x79\xf5\x56\x39\x2f\x01\xb9\xef\x8a\x54\xc9\x32\xda\xd8\x08\x55\x4f\x3a\xf5\xb0\x5d\xb9\x6f\xa5\xac\x8d\xba\x8c\x04\x8c\x1f\xad\xd7\x19\xe8\xa6\x6d\x2c\x75\x2a\x78\x4b\x14\x78\x53\xc6\x6b\x5c\xae\xc1\xfa\x9a\x5a\x36\xb1\xe8\x4a\x87\xd8\x13\x6a\x0c\x8c\x59\xea\x4d\xe7\x3d\xa8\x3d\xce\x94\xd7\x9b\x39\x4f\x5e\xb6\xb4\x20\x65\x8c\x99\xb5\x44\xe4\xe5\x2a\x44\xd7\xbb\x30\xd9\x41\x08\xc4\x73\x68\x78\x88\x08\xbc\x4c\x37\x6b\xf4\x66\xaa\xbf\x79\x67\x53\x6b\xeb\xe6\x0d\x13\xc6\x3b\xb2\xdf\xcb\x70\x0f\x8b\x83\xfa\x39\xac\xf5\x1c\xdb\xc1\x2a\xcb\x15\xf6\xce\x04\xe5\xdc\xac\x75\xe2\x54\xa7\xe6\x41\x32\x5d\xdd\x6a\xaa\x7d\xdf\xfb\x34\xe8\xd4\x4d\x2f\x9e\x7e\x97\x80\x56\x17\x31\xc4\x97\x86\x6d\x76\x7a\xdd\xa8\xa6\xd6\x06\x8f\x99\x6b\xfd\xad\x6b\xd3\x7b\x28\x92\x5d\x87\x60\xf5\xa9\xdc\xad\xbd\xfb\x4f\x16\xb8\xa4\xcb\x18\xef\xd8\x1a\xc9\x0e\x05\x9c\x6c\x68\xe6\xd2\xa8\x7a\xbc\x64\x6f\x97\xdd\xd7\x77\xd3\xfb\xf9\x6c\x3c\x99\xce\x2b\x71\x96\xac\xc0\x34\x63\x71\x4d\x67\x1d\xf1\xc4\x59\xce\x62\xb2\xd9\xb2\x57\x74\xfd\x29\xba\xfe\x63\x15\x77\x91\x6c\xc5\xd6\x83\xea\xed\x10\xfd\x84\x3e\x0c\x87\x16\xc9\x34\x50\x4e\x27\x15\x15\x9f\x94\x48\xfd\xd4\x9b\xdf\x60\x05\xce\x4a\xca\x68\x9e\x59\xb3\x1c\xfc\xf9\x82\x3c\xe6\x05\x89\xe5\x04\x38\xcb\x21\xd3\x01\x23\x2d\x7b\xd1\x49\xcb\x6e\xf0\x8b\x99\xf8\xb0\x66\x3e\x6e\xa3\x8f\x73\x33\xfd\x21\x51\xa1\x1f\xd1\xd3\x45\x37\xfd\xa1\xcd\xf3\x25\x9b\x4b\x00\x64\xe9\xca\xaa\x74\xf2\xbd\x25\xff\x7b\x88\xc6\xd3\x9b\xc3\x26\x83\xfb\x67\x5d\x6e\x26\xf7\xf3\xc9\xf4\x7a\x5e\xaf\x49\x64\x3d\x86\xff\x4c\xc6\xf4\x4b\xc6\x48\xe5\xb1\xee\x80\x46\x67\xa4\xc6\xd8\x06\x6a\x8a\x24\x14\x68\x60\x1d\xbd\xc1\x2f\x68\x72\x5f\x9b\x40\xa1\x4f\x87\xd3\x26\x74\x37\xab\xe0\xd1\x04\xfd\x64\xa7\x77\x83\x5f\x6a\x5a\xef\x66\x37\xd1\xac\xd6\x37\x21\xae\x5a\x8b\xcc\x74\x93\x23\xdf\x64\x35\x31\x46\x06\xdc\xec\xa5\xf4\x1e\x1a\x8e\xb0\x56\x8b\x5b\x03\x9d\x55\x92\xe1\x05\xd4\xc7\xc8\x8a\x5d\xf7\x00\xb7\xf6\x35\xbd\xb5\x83\x53\xf5\xa4\xea\x5c\x94\x23\x11\x65\x39\x81\x00\x46\x9e\xf0\x3c\xb2\x63\x97\xa7\x13\x30\x06\xf4\x1c\x9a\xce\x7a\xaf\x1a\xd8\xfb\xd7\x5a\x31\x99\x71\x48\xfb\xaa\x0d\x11\xb5\x46\x18\x9b\x3f\x92\x17\x74\x45\x33\x9c\xc6\xbc\xeb\x5f\xc1\xcd\x07\xd4\x6d\xc3\xdd\xc6\xb6\x2d\xd6\x1c\x92\x75\x5e\xb2\xb8\x7a\x06\x12\xb6\x4d\xe9\x12\x57\xc7\xd4\x63\x91\x6f\xb4\x7e\x55\x5b\xf7\x8e\xa3\xdb\x4d\xbb\x04\x01\xb5\xba\x69\x03\x8c\xdc\x90\xde\x77\xae\x3d\x36\xe1\x6b\x1c\x0c\x08\xd2\x8d\xa6\x23\x30\x93\xc6\x47\x31\x5c\x7e\xb3\x8c\x50\xfd\x39\x9c\x55\xce\x9b\xec\xec\x8c\x93\x5d\x41\xb3\x55\x4c\x33\xca\x28\x4e\xe9\xdf\x70\x6d\xbc\x85\x5f\x37\x18\x34\xcb\xd0\x8b\x23\xe2\x8a\x86\xce\x9d\x91\x76\x59\xc3\x78\xc7\x6f\x88\xe8\xcf\xff\x3a\xe4\x46\x7c\x60\x5d\xac\x6e\xec\x9d\xdc\x03\x87\xea\x8c\xd1\x87\x68\x2a\x23\x5e\xf1\x63\xc0\x4d\x11\x57\x84\x66\xa8\x97\x28\x68\xb4\x49\x97\x36\xca\x20\x4d\xbc\x1d\x5a\x7d\x6b\x6e\x0f\x4e\x69\xcd\x34\x8c\x8a\x05\x6b\x9e\x83\x56\xcb\xca\x2c\x61\xc8\x2c\xbd\xaf\xfe\xfd\x52\x37\xf2\xf9\xd2\x2c\xfe\x1a\x89\x85\xbb\x76\xba\x4f\xc8\x70\x2f\x11\x52\x06\xf6\xa1\x2e\xb1\xf4\xcc\xac\x87\x1b\xb3\xbe\x29\x45\x98\x9e\xd3\xb3\xda\x97\x43\x87\x87\x85\xb1\x78\x9f\x8c\xfa\x3e\x1c\x77\x37\xab\x82\x67\x64\xa8\x54\xde\x39\xf9\xde\x87\x1e\x87\xcc\x82\x53\xf1\x86\xed\x0e\x95\x57\xc7\x9a\x41\xb7\x65\x3a\x5d\xea\x5d\x5f\x83\xad\x83\xae\x10\x9a\x14\x9e\x5e\x1c\x26\x72\x83\xf7\xca\x10\x07\xa3\x05\x77\x71\x92\xa8\x39\x53\x5e\x35\xf2\xdc\x2a\x6a\x12\x8e\xb1\x72\x9f\xc3\x88\x15\x3a\x1b\xa5\x39\x85\x14\xb7\x34\xc5\xec\x31\x2f\x54\x27\x93\xe1\x55\xa9\x9d\x4a\xab\x15\x5e\x91\x65\x8a\xe9\x26\x16\x65\x54\xa3\x2d\xdd\x9d\xc3\x5b\x33\xb6\x8d\xb7\x45\xfe\xf2\x1a\xeb\x85\xd8\xea\x45\x09\xbe\xc9\xf2\xe6\xb1\xf2\x48\xb9\x39\x16\xea\xfb\x6a\x97\x67\x5b\x9a\xc5\xb5\xd9\xab\x2b\xed\xbd\xaf\x70\xa1\x38\x99\x95\xb4\xe2\xef\x6b\x92\xc5\x1c\x96\xe1\x4e\xfe\xfe\x27\x79\x1f\x57\xc7\xc3\x1d\x33\x39\x8c\x5f\xcc\x05\x47\x0d\x6a\xbd\x30\x5c\x27\x43\x28\xba\xfb\xd4\x78\x77\xad\x63\x6b\x25\xa4\x1a\xd6\x0e\x82\xc9\xe0\x74\xb4\x64\x28\x49\x09\x88\x06\xdd\x7d\x6b\xf6\x4e\xa3\xee\x77\xd3\x5b\xf0\x6e\x2d\x6a\x06\x5d\xdf\xdd\x3e\x7c\x9e\x56\x46\xe6\x3e\x9a\xcb\xd0\x98\xbc\xb0\x67\x9c\x0e\xce\xed\xee\xc0\xf9\xd5\x55\x41\x56\xcb\x14\x97\xa5\x0d\x69\x93\xd7\x09\xc3\xa3\xde\x2f\xf3\x83\x56\x76\x5e\x10\x78\xe3\xa6\x82\x1f\x85\xf5\x8a\x42\x10\x42\x4f\x47\xbe\x1f\x7d\x9d\x71\x0d\x42\xa5\x34\x52\x87\x81\xed\xf4\x51\x87\x23\x81\x7a\x91\xfd\x28\xcd\x06\xcb\x20\x8c\xb6\xb6\x42\x3f\x42\xd9\xd4\x14\x84\xa8\xdb\xfc\xe2\x47\xd0\xf5\x64\x83\xd0\xc0\xde\x5e\x1f\x64\xa0\x4f\xd7\x13\xb7\xc3\x89\xe9\x4d\xca\x7e\xc8\xf7\x40\xd7\xc3\x5e\xed\x69\xaa\x64\xe2\xb3\x17\x96\x70\x04\x4d\x29\x2e\x08\xb8\x5a\x57\xf2\x03\x86\x92\xb7\x41\x68\xec\xe9\xc2\x00\xa4\x3c\x3d\x18\x86\x48\x8b\xe4\xfd\xc0\x1d\x51\x7c\x10\x3e\x6f\x20\x1b\x4c\xc2\x5e\xfb\xdc\x19\xdc\xed\x81\x7a\xff\x5d\xdf\x27\x82\x09\x26\x4c\x8d\x4f\xfa\x50\x61\x3a\xee\x01\x0e\x84\x29\xc2\xda\x21\x1c\xdf\xdc\xa8\x4e\x21\x24\xe9\xba\x98\xfc\x8d\xbc\xa2\x87\xe9\xe4\x4f\x0f\x11\x6a\xea\xc7\x07\x47\xb3\xad\x50\xfc\x32\x9b\x7c\x1e\xcf\xbe\xa2\x3f\x46\x5f\xd1\x80\x26\x4e\x6f\x08\x04\xcc\xcb\x33\xe1\xb0\x78\x08\x03\x01\x53\xca\xea\x7c\x54\xc3\x8b\x5d\x46\x7f\xdd\x91\x10\x76\x48\x5f\xc9\x02\x5f\x78\x52\x4d\x06\x5e\xe3\x72\xf3\xe8\xad\x80\x7b\x70\xc2\xe6\x67\x41\x18\xac\x3e\xd9\xa9\xf1\x35\xb2\xe0\xb7\xa6\x63\xe5\xca\x88\x60\xa3\x28\xfa\xc9\x57\x0e\x77\x0e\x42\x5d\xbb\x6b\x3d\x96\x65\xba\x77\x56\xa8\xba\x13\xd8\x13\x87\x15\x2a\x67\x89\x52\x1f\xd6\x39\xa2\xbc\x18\x21\x07\x43\x0c\xaf\x11\xc2\x68\xba\x96\x3d\x96\xb1\x27\x86\xc3\xc9\xbc\xf5\x57\x21\xc4\xd2\x99\xad\x77\xbd\x08\xd1\xd5\x6d\x3f\x12\x81\xfb\xdb\xe0\xf7\x60\x59\xdd\x26\x6e\x83\xd6\x0b\x52\xe7\x54\x85\x60\x76\x0f\xde\xe3\x42\x37\xfb\xc7\xda\x4f\x8a\x28\xfd\xdd\x9a\x8d\x34\xa7\x8c\x84\x17\x37\x52\x9b\xc2\xf7\x8a\x07\xdc\x34\x83\x0e\xc0\x5e\x0c\x6a\x5c\xf9\x00\x6c\xc7\x87\x6f\xa4\xff\xe1\x0c\x76\x5c\xe6\x16\x31\xf0\x69\x23\xb8\x10\x34\x52\x3b\x9a\x83\x22\x15\x27\xd5\xdc\x6f\xe8\xd8\x39\x8d\xb2\x50\x5b\xd7\x1f\x6b\x7f\x49\x38\xc1\xf6\x82\x58\x87\x35\x10\xb4\x26\xde\x39\x14\x6d\x87\x3a\x48\x80\xf0\x08\x42\x07\x45\x51\x3d\x96\xc2\x63\x23\x10\xb2\x12\x36\xd5\x1f\x38\x54\x55\xa4\x56\xcb\x3a\x4f\xb8\x37\xdc\xc3\x52\xa9\xd4\x22\x20\xbf\x50\x79\x3d\x42\x4e\x27\xd1\x1e\xbd\x41\xe8\x1d\xb1\x5e\x6f\x77\xfa\x00\x38\x55\x2e\x40\xc6\xc4\xce\x13\xd0\xf4\xf4\x8a\x4e\x1d\xa4\xbe\xe1\x48\x0c\x8a\x21\x83\x50\xbf\xf5\xec\x31\xe3\x48\x07\x5a\x35\xda\x3c\x4c\x5c\x25\x82\xa9\xba\x02\xa1\x8a\xb1\x7a\xb0\x3f\x38\x93\x38\x69\x93\x78\xd5\x8a\x23\x9a\x4c\x6f\xa2\xbf\x68\x1f\xbf\x6c\xef\xaa\xc6\xed\x57\x2a\xef\xa6\xfa\xe7\x31\x1f\xee\x27\xd3\x9f\xd1\x82\x15\x84\xf0\x3e\xcb\xda\xee\x89\xf1\x1a\x1e\x17\x02\x9a\xbc\x84\xc1\xb6\x42\x04\x3f\x7d\x29\x3f\xd2\xd2\x02\x87\x3f\x91\x79\x08\x5c\x66\x9b\x40\x1f\xa4\xc6\x6c\x3b\xf6\xc6\xe1\x87\x79\xc7\x33\xe0\x3d\xd7\xd3\x81\x08\x7f\xfc\x32\x08\xc7\x08\xfe\x72\xa6\x0f\x35\x38\xc9\xbf\xb2\x7e\xb8\xf8\x77\x3f\x2d\x9c\x13\x5f\x05\xed\xc7\x3a\x03\xa6\x87\x77\x4e\x2c\x7d\x99\x27\x90\x07\x70\x0f\xc4\xdb\x0b\x5b\x19\x6b\x1d\xd9\xb2\xe7\xbe\x45\xd2\x81\xae\x37\x70\xcb\x6f\x72\xda\x11\xf0\xd6\x02\x0b\x3c\xde\x6c\x6d\x9d\xad\xde\x29\xb2\x80\x50\x86\xd8\xe1\xf0\x96\x6c\x0b\x08\x7e\x1f\xc0\x3a\x5b\x44\xc4\x96\xe9\x5a\x68\xac\xcd\x57\xf2\x53\xaa\xd5\x52\x2a\x91\xa1\x9a\xa9\x16\x23\x6d\x9f\x91\x73\x40\xb6\xcd\x09\xc1\x64\x7c\x8a\xce\x8b\xa7\x3b\xc3\x8d\x45\x7c\xa0\xd2\x01\x96\x0f\x71\xc3\x51\xa4\x64\x83\x13\x24\x29\xb5\x45\xc6\x01\x4b\x19\x16\x04\xcf\xdb\xff\xe4\xc7\xe5\x03\x01\xd0\x61\xcd\x27\xca\x7d\x69\x2d\x5a\x87\xed\x54\x2b\x06\xe5\xc3\x35\xc1\x58\xe4\x1c\xbb\x3b\x53\x41\x7a\x51\xef\x7f\xf1\xf0\x6d\x59\xb9\xc3\x34\x2b\x49\x7d\x85\xe1\xb9\x16\x5e\x53\x42\xd3\x50\xa4\xf9\x77\x52\x34\x1e\x13\xb0\x9a\x26\x09\xaa\x5b\x9d\xba\xac\xde\xc3\xe6\x00\x29\x4f\x91\xc2\x6b\xcc\x37\x50\x50\xf7\xf1\x5a\xe3\x80\xe7\x86\x14\x27\xdb\x77\x8f\x4a\xdf\xb8\xd0\x42\xcc\x8c\xa4\x84\x6e\x56\xe8\xc3\xd4\xc5\x84\xa9\xeb\x89\x07\x6e\x88\x82\x00\x5f\x4d\x31\x80\xf7\x61\x83\xcc\x5f\x2a\x26\x46\x36\x0c\x04\x5a\x98\x26\x6f\xd9\x81\x10\x3c\xbb\xe3\x4a\xee\xca\x8e\x23\x0c\xbc\x0f\x3e\x5b\x20\xd8\x5d\x83\xef\x85\xef\xb1\xf7\x10\x0e\xd0\xb9\xf6\x22\x0a\x71\xaa\xfd\x19\x57\x13\x95\x15\x8d\x98\xe2\xc4\x03\x46\xaa\x3e\xb4\x60\x99\xf6\xcd\x54\x94\x96\x6e\x5c\x13\x75\x57\x45\xec\xf9\x04\x37\x3e\x8f\x20\x21\x5c\xbd\xa4\x68\xe4\x3f\x35\xf8\x4d\x99\xbf\x87\x7d\xee\xc0\xf5\x48\x09\x00\xdf\x4b\x2a\x56\xc2\xf7\xa2\xd9\x47\x6e\x3f\x4a\x35\xb3\x69\xbd\xfc\xc7\x51\xd8\xef\x1f\xfb\x4d\x28\x94\xf2\x04\xe2\x1a\xa8\x31\x05\x5e\x8f\x6b\x21\x3e\x64\xb5\x66\x8b\x96\xd1\x9e\x58\x47\xf5\x7d\xc4\x11\xda\x24\xff\x26\xce\x22\xc8\x8d\x10\x29\xce\xae\x19\x15\x4d\x30\x61\xa6\x53\x5f\x15\x07\xc9\xef\xb0\xd9\x80\xa9\x89\x52\x90\x24\x79\x4d\xcc\x06\xa2\x1d\xe1\x80\xa2\x9c\x63\x20\x0c\xfb\x49\xd6\xc9\xfe\x5a\x6d\x15\x08\xd6\x35\xc9\x8f\x4b\xb8\xf4\x2e\xd0\x16\x7f\xbe\x03\x09\xb4\x78\x2e\xb0\x6e\x7b\x07\x0a\x1a\x9e\xc9\x7b\x32\xde\x84\x0e\xc4\xa3\x5f\x00\xf3\xc0\xd7\x06\x03\xb0\x1d\xf9\x6e\xab\xc0\x1d\x3d\x5c\x7b\x1d\x53\x61\x39\xf7\x3e\x98\xdd\x2a\x62\x49\x9c\x83\xaa\x62\x69\x16\xeb\x7d\x44\x5a\x70\xfa\xf6\x56\x08\xfa\x9e\x5b\x2d\x2c\x77\x6f\x7d\x0d\x52\xd5\xdf\x3f\x0a\x88\x88\xc3\x08\xb5\xae\x7e\x4f\x42\xf7\xe3\xa6\x5a\x92\x90\x07\x31\xd0\x55\x17\x16\x7b\x01\x50\xe1\x9d\x60\x05\x1d\xb2\x03\xb4\xc3\x41\x5c\x9c\xb1\x1f\x0e\x70\xd3\x1b\x9c\x5e\xb7\x76\xc2\x79\x4a\x05\xf1\xe3\x37\xf2\x8a\x3e\xde\xcd\xa2\xc9\xcf\xd3\xa6\x64\xd2\xc6\x43\x68\x16\x7d\x8c\x66\xd1\xf4\x3a\xe2\x1f\x7a\x2d\x2b\x17\xa6\xa2\xfd\x26\xba\x8d\xe6\x11\xba\x1e\xdf\x5f\x8f\x6f\xa2\xa3\x13\x6b\xf6\x24\x98\x54\x9b\x36\x41\x25\xbf\x03\xb1\xb3\x8e\x59\x74\x3f\x9f\x4d\xae\xe7\xce\x85\x58\xbb\x93\xe0\xaa\xc2\xb1\xf9\x1a\x46\x0e\x9c\x2b\x37\x69\x83\x73\xe3\x2a\xa1\x80\x2b\xd8\x9f\x6a\x9e\x97\xb7\x93\x6d\x14\x18\x8e\xcc\xc6\x60\x82\xfe\xbe\x18\xe9\x6c\x7c\x55\x7a\x35\x4c\xfa\xd4\x58\x4a\xa5\xaa\x4d\xda\x1c\x94\x16\x6e\xce\x00\x3a\x84\xa1\x53\x69\xa8\x53\x92\x7d\xf0\x07\xb7\xc0\x1e\x44\x9d\xee\xa3\xe6\x66\xda\x1b\x69\xb1\x15\x1c\x00\xda\xac\xb5\x09\x95\x56\x09\xfa\x98\xf4\x76\x0b\x17\x56\x6a\x8d\x0a\xc7\x29\x69\x7d\xbb\xbe\x1d\x88\x10\xb5\x75\xc5\x24\x46\xf5\x15\x54\x82\xb8\x4b\xc0\xbf\xce\x76\xe8\x4d\x10\x58\x2a\xb1\xd3\xeb\x75\x29\xcd\xb5\x78\x3c\xc1\x5e\xcc\x77\xf4\x4d\x55\x24\xeb\x19\x05\x8d\xfe\x43\xeb\x63\x58\x7f\x77\x4d\x14\xf7\x4d\x35\x72\xc4\xa7\xcc\x14\x42\x2a\x88\x87\xb1\xbc\xc7\xc4\x1a\xd8\xc5\x57\x93\xa0\xf6\x03\xc0\x8e\x9a\xc5\x45\xeb\x45\xd1\x41\x2e\x10\xf0\x12\x94\xa9\xf7\x07\x60\xd9\x41\x08\x94\xa5\x1d\xbb\xc7\x71\x60\x37\xc3\x7d\x15\xe2\x74\x2e\xc6\x9e\xf7\x03\x8e\x29\xd2\x3d\x49\x7a\x07\x21\x06\xde\x3d\x38\xb2\x97\xe6\xb9\xaf\x70\x64\xec\x40\xd5\xcc\x7f\x13\x41\xaf\x22\x1e\x2f\x08\x79\x03\x71\x1e\x67\xac\xff\x91\x77\x2c\x42\xdf\x37\x78\x0f\xc8\x3c\xf8\x4b\xa2\x4e\x8a\xdb\xf2\x11\x4c\x72\x53\xe2\xdb\x93\xe6\x03\xdd\x49\xf9\x7b\x5b\x51\xd8\x4d\x14\xf8\xde\x09\xb0\x17\xc1\xcc\xa1\xb6\x31\xcd\xf4\xf5\x7e\xca\xff\xa6\x7b\x34\xef\xa2\xf6\xfb\x5c\xa1\x39\xf2\x91\xde\x9b\xb6\x13\xa8\xaf\xdb\xdf\x77\x7a\xbb\x60\x35\xfb\x54\x3c\xf4\x50\xf4\xee\x9c\x0b\xb9\x39\x23\x6a\xaa\x10\xcf\xc4\xbb\x91\xf6\xb1\x4e\xdd\x47\x6a\xe0\x28\x97\x78\x82\x77\x49\x00\x75\xc7\xce\x28\x84\x5f\x06\x0a\x35\x87\xce\x7a\x0a\x10\xa1\xfb\x8d\xe3\xa1\x56\x70\x8a\x6c\x48\x38\x35\x21\x06\xda\x5a\x33\x76\x66\x3a\x20\x73\x7d\x28\x1e\x6a\xe5\x65\x3b\xc5\x7a\x15\x1a\xa0\x56\xa9\x63\xf5\xa2\xf4\x60\x97\xbb\x4e\x79\xba\xbb\xad\xc0\x51\xee\xab\x1d\x59\xcd\xdf\x7c\x69\xed\xd8\xee\xc9\x71\xa9\x7f\x77\x93\xd8\x6f\x79\x07\xb9\xe5\xe7\x84\x17\x70\xac\x3b\xb3\xb5\xbd\xd2\xb4\xef\xb1\xf8\xdf\xa2\xc4\xdb\xf8\xed\xc8\x29\x92\xbd\xef\x82\x1e\x33\xcb\xb6\x37\x51\x27\xb7\xc2\xce\x1b\xa9\x87\x15\xdd\xd9\xff\x07\x00\x00\xff\xff\x86\x11\xc2\x3c\xb4\x91\x00\x00")

func _1510262030_initial_schemaUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1510262030_initial_schemaUpSql,
		"1510262030_initial_schema.up.sql",
	)
}

func _1510262030_initial_schemaUpSql() (*asset, error) {
	bytes, err := _1510262030_initial_schemaUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1510262030_initial_schema.up.sql", size: 37300, mode: os.FileMode(420), modTime: time.Unix(1510335524, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1510262030_initial_schema.down.sql": _1510262030_initial_schemaDownSql,
	"1510262030_initial_schema.up.sql": _1510262030_initial_schemaUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"1510262030_initial_schema.down.sql": &bintree{_1510262030_initial_schemaDownSql, map[string]*bintree{}},
	"1510262030_initial_schema.up.sql": &bintree{_1510262030_initial_schemaUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

